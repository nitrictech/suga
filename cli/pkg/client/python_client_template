# Code generated by Suga SDK generator. DO NOT EDIT.

import os
import grpc
from suga.gen.storage.v2 import storage_pb2_grpc
{{if .Buckets}}
from suga.buckets import Bucket
{{end}}

{{range .Buckets}}
class {{.PascalCase}}Bucket:
    """Wrapper for bucket '{{.Unmodified}}' with restricted permissions."""
    
    def __init__(self, storage_client, name):
        self._bucket = Bucket(storage_client, name)
        {{range .Permissions}}
        {{if eq . "read"}}
        self.read = self._bucket.read
        {{end}}
        {{if eq . "write"}}
        self.write = self._bucket.write
        {{end}}
        {{if eq . "delete"}}
        self.delete = self._bucket.delete
        {{end}}
        {{end}}
        
        # Always available methods
        self.list = self._bucket.list
        self.exists = self._bucket.exists
        self.get_download_url = self._bucket.get_download_url
        self.get_upload_url = self._bucket.get_upload_url
{{end}}

class SugaClient:
    def __init__(self):
        address = os.getenv("SUGA_SERVICE_ADDRESS")
        if address == "":
            address = "localhost:50051"
        
        self._channel = grpc.insecure_channel(address)
        {{if .Buckets}}
        self._storage_client = storage_pb2_grpc.StorageStub(self._channel)
        {{end}}
        
        {{range .Buckets}}
        self.{{.CamelCase}} = {{.PascalCase}}Bucket(self._storage_client, "{{.Unmodified}}")
        {{end}}

    def close(self):
        self._channel.close()

