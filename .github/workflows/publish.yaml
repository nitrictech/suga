name: Publish

on:
  push:
    # run only against tags
    tags:
      - "*"

jobs:
  test-java-compatibility:
    name: Test Java Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [8, 11, 17, 21]
    defaults:
      run:
        working-directory: ./client/java
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-java${{ matrix.java-version }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-java${{ matrix.java-version }}-
            ${{ runner.os }}-m2-

      - name: Generate protobuf sources
        run: mvn protobuf:compile protobuf:compile-custom

      - name: Compile Kotlin and Java sources
        run: mvn compile

      - name: Run tests
        run: mvn test

      - name: Verify JAR can be built
        run: mvn package -DskipTests

  publish-goreleaser:
    needs: test-java-compatibility
    name: Publish - Go Releaser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: 1.24.3

      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: 2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.NITRIC_BOT_TOKEN }}

  publish-node:
    name: Publish - NodeJS Client NPM
    needs: test-java-compatibility
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client/node
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.NITRIC_BOT_TOKEN }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: "node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Git Identity
        run: |
          git config --global user.name 'nitric-bot[bot]'
          git config --global user.email 'maintainers@nitric.io'

      - name: Set Version
        # Tag will already be created by release flow
        run: |
          VER="${{ github.ref_name }}"
          # Strip leading "v" from tag name (e.g., v1.2.3 -> 1.2.3)
          VER="${VER#v}"
          npm version --no-git-tag-version "$VER"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ ^.*(-rc|-beta|-alpha).*$ ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish latest to NPM
        if: steps.prerelease.outputs.is_prerelease == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest RC to NPM
        if: steps.prerelease.outputs.is_prerelease == 'true'
        run: npm publish --access public --tag rc-latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-python:
    name: Publish - Python Client PyPI
    needs: test-java-compatibility
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./client/python
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed to retrieve most recent tag
      
      - name: Set up Python '3.11'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Create virtual environment and install uv
        run: |
          python3 -m venv .venv
          .venv/bin/python -m pip install --upgrade pip
          .venv/bin/python -m pip install uv
      
      - name: Set Version
        run: |
          # Normalize git tag to PEP 440 compliant version for setuptools-scm
          VER="${{ github.ref_name }}"
          # Strip leading "v" (v1.2.3 -> 1.2.3)
          VER="${VER#v}"
          # Convert SemVer prerelease tokens to PEP 440 format
          VER=$(echo "$VER" | sed -E 's/-rc\.?([0-9]+)/rc\1/g')
          VER=$(echo "$VER" | sed -E 's/-beta\.?([0-9]+)/b\1/g') 
          VER=$(echo "$VER" | sed -E 's/-alpha\.?([0-9]+)/a\1/g')
          echo "SETUPTOOLS_SCM_PRETEND_VERSION=$VER" >> $GITHUB_ENV
      
      - name: Generate protobuf files
        run: make generate-proto
      
      - name: Build package
        run: make build
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./client/python/dist/

  publish-kotlin:
    name: Publish - Kotlin/Java Client Maven Central
    needs: test-java-compatibility
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client/java
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set Version
        run: |
          VER="${{ github.ref_name }}"
          # Strip leading "v" from tag name (e.g., v1.2.3 -> 1.2.3)
          VER="${VER#v}"
          # Convert SemVer prerelease tokens to Maven format
          VER=$(echo "$VER" | sed -E 's/-rc\.?([0-9]+)/-RC\1/g')
          VER=$(echo "$VER" | sed -E 's/-beta\.?([0-9]+)/-BETA\1/g')
          VER=$(echo "$VER" | sed -E 's/-alpha\.?([0-9]+)/-ALPHA\1/g')
          mvn versions:set -DnewVersion="$VER"

      - name: Generate protobuf sources
        run: mvn protobuf:compile protobuf:compile-custom

      - name: Compile Kotlin and Java sources
        run: mvn compile

      - name: Run tests
        run: mvn test

      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ ^.*(-rc|-beta|-alpha).*$ ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Maven Central (Release)
        if: steps.prerelease.outputs.is_prerelease == 'false'
        run: mvn clean deploy -P release
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Deploy to Maven Central (Snapshot)
        if: steps.prerelease.outputs.is_prerelease == 'true'
        run: |
          # For prereleases, deploy as snapshot
          VER="${{ github.ref_name }}"
          VER="${VER#v}"
          VER=$(echo "$VER" | sed -E 's/-rc\.?([0-9]+)/-RC\1-SNAPSHOT/g')
          VER=$(echo "$VER" | sed -E 's/-beta\.?([0-9]+)/-BETA\1-SNAPSHOT/g')
          VER=$(echo "$VER" | sed -E 's/-alpha\.?([0-9]+)/-ALPHA\1-SNAPSHOT/g')
          mvn versions:set -DnewVersion="$VER"
          mvn clean deploy -P release
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
